# AppVeyor.com is a Continuous Integration service to build and run tests under
# Windows
# https://ci.appveyor.com/project/kif/pyFAI

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\run_with_env.cmd"
#    WHEELHOUSE_UPLOADER_USERNAME: fabio-appveyor
#    WHEELHOUSE_UPLOADER_SECRET:
#      secure: plop

    # Make sure we don't download large datasets when running the test on
    # continuous integration platform
#    SKLEARN_SKIP_NETWORK_TESTS: 1

  matrix:
#    - PYTHON: "C:\\Python27"
#      PYTHON_VERSION: "2.7.10"
#      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.10"
      PYTHON_ARCH: "64"

#    - PYTHON: "C:\\Python34"
#      PYTHON_VERSION: "3.4.3"
#      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.3"
      PYTHON_ARCH: "64"


install:
  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - "powershell ./install_python.ps1"
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"print(tuple.__itemsize__*8)\""
  # Install the build and runtime dependencies of the project.
  #pip install -i https://pypi.anaconda.org/carlkl/simple scipy
  - "%CMD_IN_ENV% pip install --trusted-host pypi.anaconda.org -i https://pypi.anaconda.org/carlkl/simple numpy scipy"
  - "%CMD_IN_ENV% pip install --trusted-host www.edna-site.org -f http://www.edna-site.org/pub/wheelhouse pyparsing cython"
  - "%CMD_IN_ENV% pip install --trusted-host www.edna-site.org -r requirements_appveyor.txt"
  - "del pyFAI\\ext\\histogram.c"
  - "%CMD_IN_ENV% python setup.py build --no-openmp" #OpenMP is not available on python 3.4
  - "%CMD_IN_ENV% python setup.py bdist_wheel bdist_msi"
  - ps: "ls dist"

  # Install the generated wheel package to test it
  - "%CMD_IN_ENV% pip install --pre --no-index --find-links dist/ pyFAI"

# Not a .NET project, we build fabio in the install step instead
build: false

test_script:
  # Change to a non-source folder to make sure we run the tests on the
  # installed library.
  - "%CMD_IN_ENV% python setup.py test"
  - "mkdir empty_folder"
  - "cd empty_folder"
  - "python ../run_tests.py"

  # Move back to the project folder
  - "cd .."

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  # Upload the generated wheel package to Rackspace
#  # On Windows, Apache Libcloud cannot find a standard CA cert bundle so we
#  # disable the ssl checks.
#  - "python -m wheelhouse_uploader upload --no-ssl-check --local-folder=dist sklearn-windows-wheels"

#notifications:
#  - provider: Webhook
#    url: https://webhooks.gitter.im/e/0dc8e57cd38105aeb1b4
#    on_build_success: false
#    on_build_failure: True

